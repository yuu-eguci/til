
【クラスって何?】

JavaScriptでは連想配列のことをオブジェクトって呼ぶ。
「いやオブジェクトじゃねーだろそれ! 連想配列だろ!」
「...あれ? でも考えてみりゃ、オブジェクトと連想配列って同じようなもんじゃね?」

そのことから思いついたことをつらつらと。

ずっと「クラス・オブジェクトって何なのよくわかんねえ」って思ってたけれど、
クラスやオブジェクトって実は要するに連想配列のことなんじゃないの?

連想配列でいうところのキーがクラスのプロパティにあたり、
キーに関数を格納したもの(無名関数で実現できる)がクラスのメソッドにあたるんじゃない?

だってほら、ベタで変数aと関数fooを書いたら、呼び出すときってそのまま「a」「foo()」でいいけれど、
配列myArrayの中の変数や関数と、クラスmyClassの中の変数や関数を呼び出すときって
「myArrayのa」「myArrayのfoo()」、「myClassのa」「myClassのfoo()」って言うじゃん?
同じじゃないか?
たとえばphpで書けば myArray["a"], myArray["foo"]() そして $myClass->a, myClass->foo()
書き方が違うだけじゃないか?

arrayxxx = [property=(おもちゃの数), property=(自由時間), method=(おもちゃと時間を使って遊ぶ関数)]
みたいなのと、

class xxx() {
    property=(おもちゃの数)
    property=(自由時間)
    function hobby () {
        (おもちゃと時間を使って遊ぶ関数)
    }
}
似とるやん?

もちろん連想配列のほうがわかりやすいし単純でいいんだけれど、
同じようなキー群と関数群を使いまわしたいとき結構かったるいやん?

AさんとBさんのそれぞれの休日の過ごし方を管理するとき、
使う変数は同じ(おもちゃの数と自由時間と、それらを使って遊ぶ関数)
なんだから、いちいち
array_a = [omocha=1,jikan=2,hobby=function(){...}]
array_b = [omocha=5,jikan=6,hobby=function(){...}]
とか書いてたらかったるいじゃん?

けどもクラス化しちゃって
class xxx(omocha, jikan) {
    self_omocha = omocha
    self_jikan = jikan
    function...
}
こうしたら簡単じゃん? みやすいし。

そしてこのクラスを使って
a = xxx(1, 2)
b = xxx(5, 6)
って書いたら、内部的には
a = [omocha:1,jikan:2]
b = [omocha:5,jikan:6]
と連想配列になっている。(しらんけど)

というわけで、連想配列とクラスの関係は、データ保存用の.txtファイルとデータベースのような関係だ。
つまり、どっちもやってることは同じなんだが、後者は複雑で大規模なことができる。

クラスってなんなの、と言われたら「連想配列でも出来るんだがちょっと複雑すぎて手に負えんってときに手を出す技術」で、
オブジェクト(インスタンス)ってなんなの、と言われたら「クラスを使うとき内部的に作られる連想配列のこと」となる。

以上です。
